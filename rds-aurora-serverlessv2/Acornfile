args: {
	adminUser: "admin"
	dbName: "instance"
	instanceSize: "small"
	tags: {}
	dbUsers: {}
}

services: rds: {
	default: true
	generated: job: "cdk-cfn-render"
}

jobs: "context-generator": {
	build: {
		context:    "../cdk-render"
		dockerfile: "../cdk-render/Dockerfile"
	}
	dirs: "/acorn/aws": "secret://aws-config"
    permissions: rules: [
        {
            apiGroup: "aws.acorn.io"
            verbs: [
                "ec2:DescribeAvailabilityZones",
                "ec2:DescribeVpcs",
                "ec2:DescribeSubnets",
                "ec2:DescribeRouteTables",
            ]
            resources: ["*"]
        }
    ]
}

jobs: {
	"cdk-cfn-render": {
	    sidecars: "cfn-render": {
	    	init: true
	    	build: {
	    		context:    "."
	    	}
	    	files: {
	    		"/app/cdk.context.json": "secret://cdk-context-json/content"
	    		"/app/config.json": std.toJSON(localData.config)
	    	}
	    	env: {
	    		CDK_DEFAULT_ACCOUNT: "secret://aws-config/account-id"
	    		CDK_DEFAULT_REGION:  "secret://aws-config/aws-region"
	    		VPC_ID: "secret://aws-config/vpc-id"
	    		ACORN_APP: "@{acorn.name}"
	    		ACORN_NAMESPACE: "@{acorn.namespace}"
	    	}
	    	dirs: "/acorn/data": "volume://cfn-data"
	    }
	    build: {
	    	context:    "../cfn-apply"
	    	dockerfile: "../cfn-apply/Dockerfile"
	    }
        permissions: rules: [
            {
                apiGroup: "aws.acorn.io"
                verbs: [
                    "cloudformation:DescribeStacks",
                    "cloudformation:CreateChangeSet",
                    "cloudformation:DescribeChangeSet",
                    "cloudformation:ExecuteChangeSet",
                    "cloudformation:GetTemplateSummary",
                    "ssm:GetParameters",
                    "secretsmanager:*",
                    "ec2:*",
                    "rds:*"
                ]
                resources: ["*"]
            }
        ]
	    env: {
	    	ACORN_APP: "@{acorn.name}"
	    	ACORN_NAMESPACE: "@{acorn.namespace}"
	    	DATABASE_NAME: args.dbName
	    }
        entrypoint: ["/app/scripts/stack_wrapper.sh"]
	    events: ["create", "update", "delete"]
	    dependsOn: ["context-generator"]
	    dirs: {
	    	"/acorn/data": "volume://cfn-data"
	    	"/app/scripts": "./scripts"
	    }
	}
	if len(args.dbUsers) > 0 {
	    "sql-client": {
	    	image: "mariadb:10"
	    	dependsOn: ["cdk-cfn-render"]
	    	dirs: {
	    		"/acorn/users": "secret://db-users"
	    		"/acorn/create_and_grant_users.sh": "./scripts/create_and_grant_users.sh"
	    	}
	    	env: {
	    		MYSQL_ADMIN_USER: args.adminUser
	    		MYSQL_PASSWORD: "secret://admin/password"
	    		MYSQL_HOST: "@{service.rds.address}"
	    		MYSQL_DATABASE: args.dbName
	    	}
	    	entrypoint: ["/acorn/create_and_grant_users.sh"]
			//entrypoint: ["sleep"]
			//command: ["3600"]
	    }
	}
}

volumes: "cfn-data": class: "ephemeral"

secrets: {
    "admin": {
        type: "generated"
        params: {
            job: "cdk-cfn-render"
            format: "json"
        }
    }
	"aws-config": {
        external: "context://aws"
		type: "opaque"
		data: {
			"account-id": ""
			"vpc-id":     ""
			"aws-region": ""
		}
	}
	"cdk-context-json": {
		type: "generated"
		params: job: "context-generator"
	}
	"acorn-service": {
		type: "generated"
		params: job: "cdk-cfn-render"
	}
}

localData: {
	config: {
		databaseName: args.dbName
		adminUser: args.adminUser
		tags: args.tags
		instanceSize: args.instanceSize
	}
}
